syntax = "proto2";
package et;

enum PacketType {
  KEEP_ALIVE = 0;
  TERMINAL_BUFFER = 1;
  TERMINAL_INFO = 2;
  // PORT_FORWARD_REQUEST = 3; obsolete
  // PORT_FORWARD_RESPONSE = 4; obsolete
  // PORT_FORWARD_DATA = 5;  obsolete
  PORT_FORWARD_SOURCE_REQUEST = 6;
  PORT_FORWARD_SOURCE_RESPONSE = 7;
  PORT_FORWARD_DESTINATION_REQUEST = 8;
  PORT_FORWARD_DESTINATION_RESPONSE = 9;
  PORT_FORWARD_SD_DATA = 10; // Source -> Destination
  PORT_FORWARD_DS_DATA = 11; // Destination -> Source
}

message TerminalBuffer {
  optional bytes buffer = 1;
}

message TerminalInfo {
  optional string id = 1;
  optional int32 row = 2;
  optional int32 column = 3;
  optional int32 width = 4;
  optional int32 height = 5;
}

message PortForwardRequest {
  optional int32 port = 1;
  optional int32 fd = 2;
}

message PortForwardResponse {
  optional int32 clientfd = 1;
  optional int32 socketid = 2;
  optional string error = 3;
}

message PortForwardData {
  optional int32 socketid = 1;
  optional bytes buffer = 2;
  optional string error = 3;
  optional bool closed = 4;
}

message InitialPayload {
  optional bool jumphost = 1 [default = false];
}

message ConfigParams {
  optional int32 vlevel = 1;
  optional int32 minloglevel = 2;
}
